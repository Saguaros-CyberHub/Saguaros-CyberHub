services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - kc-db:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    container_name: keycloak
    restart: unless-stopped
    depends_on:
      - postgres
    command: ["start-dev"]
    ports:
      - "8080:8080"           # Keycloak UI at http://localhost:8080
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 30

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
      whoami:
        condition: service_started
    ports:
      - "4180:4180"           # Visit http://localhost:4180 (protected)
    environment:
      # Talk to Keycloak by service name (in-cluster), not localhost
      OAUTH2_PROXY_PROVIDER: oidc
      OAUTH2_PROXY_OIDC_ISSUER_URL: http://keycloak:8080/realms/Test
      OAUTH2_PROXY_CLIENT_ID: oauth2-proxy
      OAUTH2_PROXY_CLIENT_SECRET: ${OAUTH2_PROXY_CLIENT_SECRET}
      OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET}   # 32-byte base64
      OAUTH2_PROXY_REDIRECT_URL: http://localhost:4180/oauth2/callback
      OAUTH2_PROXY_HTTP_ADDRESS: 0.0.0.0:4180
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_SCOPE: "openid email profile"
      OAUTH2_PROXY_COOKIE_SECURE: "false"   # ok for http://localhost
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_UPSTREAMS: http://whoami:80

  whoami:
    image: traefik/whoami:latest
    restart: unless-stopped

volumes:
  kc-db: